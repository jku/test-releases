name: CD

on:
  workflow_dispatch:
  push:
    tags:
      - v*

permissions: {}

jobs:
  candidate_release:
    outputs:
      result: ${{ steps.github-release.outputs.result }}
    name: Release candidate on Github for review
    runs-on: ubuntu-latest
    permissions:
      contents: write # to modify GitHub releases
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
      - id: github-release
        name: Publish GitHub release candidate
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0
        with:
          script: |
            fs = require('fs')
            res = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ github.ref }}',
              draft: true,
            });
            
            fs.readdirSync('dist/').forEach(file => {
              await github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: res.data.id,
                name: file,
                data: fs.readFileSync('dist/' + file),
              });
            });

            // TODO the only output we need in next job is res.data.id (the release id)
            return res

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: candidate_release
    permissions:
      contents: write # to modify GitHub releases
    steps:
      - name: Finalize GitHub release
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0
        with:
          script: |
            candidate_result=${{ needs.candidate_release.outputs.result }}
            release_id = candidate_result.data.id

            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release_id,
              draft: false,
              body: 'See [CHANGELOG.md](https://github.com/' +
                     context.repo.owner + '/' + context.repo.repo +
                    '/blob/${{ github.ref_name }}/docs/CHANGELOG.md) for details.'
            })
